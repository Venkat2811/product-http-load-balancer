@startuml

participant StocksInbound : InboundEndpoint(protocol("http"),port("8290"),context("/stocks"))

participant StocksPipeline : Pipeline("Stocks_Flow")

participant NASDAQPipeline : Pipeline("NASDAQ_Message_Flow")

participant Endpoint1 : OutboundEndpoint(protocol("http"),host("http://localhost:8080/stockquote/all"))

participant Endpoint2 : OutboundEndpoint(protocol("http"),host("http://localhost:8082/stockquote/all"))

participant Endpoint3 : OutboundEndpoint(protocol("http"),host("http://localhost:8084/stockquote/all"))

participant Endpoint4 : OutboundEndpoint(protocol("http"),host("http://localhost:8086/stockquote/all"))

participant Endpoint5 : OutboundEndpoint(protocol("http"),host("http://localhost:8088/stockquote/all"))

group name="nyse", path="/nyse", method="GET"
StocksInbound -> StocksPipeline : "client request"
LoadBalancer(Endpoint1,Endpoint2,algorithm(name(ROUND_ROBIN)),persistence(type(NO_PERSISTENCE)),healthCheck(type(PASSIVE),requestTimeout(5s),unHealthyRetries(2times),healthyRetries(2times),healthyCheckInterval(1m)))
StocksPipeline -> StocksInbound : "Final Response"
end

group name="nyse", path="/nasdaq", method="GET"
StocksInbound -> NASDAQPipeline : "client request"
LoadBalancer(Endpoint3,Endpoint4,Endpoint5,algorithm(name(ROUND_ROBIN)),persistence(type(NO_PERSISTENCE)),healthCheck(type(PASSIVE),requestTimeout(5s),unHealthyRetries(2times),healthyRetries(2times),healthyCheckInterval(1m)))
NASDAQPipeline -> StocksInbound : "Final Response"
end

@enduml

